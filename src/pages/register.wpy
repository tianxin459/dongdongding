<style lang="less">
.body {
  background-color: var(--colorBackground);
  color: var(--colorFont);
}

.title {
  width: 100%;
  font-weight: 200;
  text-align: center;
}

.input-container {
  width: 100%;
}

.ratio {
  border-bottom: 2px solid green;
}

.input {
  // border: 1px solid green;
  width: 100%;
  color: white;
  .input-label {
    text-align: center;
    margin: 20rpx 0;
    font-weight: bolder;
  }
  .input-field {
    display: flex;
    flex-direction: row;
    justify-content: center;
    input {
      align-self: center;
    }
    p {
      align-self: center;
    }
  }
  input {
    // border: 1px solid green;
    text-align: center;
    height: 4ex;
    border: 1px solid var(--colorBorder);
    border-radius: 5px;
    // border-bottom: 2px solid green;
  }
}

.success-container {
  position: fixed;
  display: flex;
  height: 100%;
  width: 100%;
  top: 220rpx;
  flex-direction: column;
  justify-content: flex-start;
  background-color: var(--colorBackground);
  color: white;
  .success-animate {
    position: fixed;
    animation: successShow 1s;
    height: 100%;
    width: 100%;
  }
  .userinfo {
    margin: 50rpx auto;
  }
  .success-title {
    text-align: center;
    font-weight: bolder;
    font-size: 100rpx;
    color: orange;
    text-shadow: 0 0 1px currentColor, -1px -1px 1px #030, 0 -1px 1px #030,
      1px -1px 1px #030, 1px 0 1px #030, 1px 1px 1px #030, 0 1px 1px #030,
      -1px 1px 1px #030, -1px 0 1px #030;
  }
  .success-name {
    text-align: center;
    font-weight: bolder;
    font-size: 80rpx;
  }
  .success-btn {
    margin: 50rpx auto;
    color: white;
    background-color: var(--colorBackground);
    border: 1px solid var(--colorBorder);
    bottom: 150rpx;
    position: fixed;
    width: 80%;
    display: block;
    align-self: center;
    animation: successShowButton 2.5s;
  }
}

@keyframes successShowButton {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes successShow {
  0% {
    top: 0px;
  }
  // 70% {
  //   top: 200rpx;
  //   // -webkit-transform: translate(2px, 2px);
  // }
  // 100% {
  //   top: 220rpx;
  // }
  90% {
    top: 220rpx;
    -webkit-transform: translate(2px, 2px);
  }
  92% {
    top: 220rpx;
    -webkit-transform: translate(-2px, -2px);
  }
  94% {
    top: 220rpx;
    -webkit-transform: translate(0px, 0px);
  }
  96% {
    top: 220rpx;
    -webkit-transform: translate(2px, -2px);
  }
  98% {
    top: 220rpx;
    -webkit-transform: translate(-2px, 2px);
  }
  100% {
    top: 220rpx;
    -webkit-transform: translate(0px, 0px);
  }
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body" wx:if="{{!showSucces}}">
      <view class="title">
        <wux-white-space size="large" />
        <wux-row>
          <wux-col span="10" offset="1">
            <text>Please fill in the information for GD 2019 Annual Party</text>
          </wux-col>
        </wux-row>
      </view>
      <view class="input-container">
        <wux-white-space size="large" />
        <wux-row>
          <wux-col span="10" offset="1">
            <view class="input">
              <view class="input-label">
                <text>Company Email</text>
              </view>
              <view class="input-field">
                <input type="input-txt" @input="onEmailChange" placeholder="Sixteen" maxlength="32" />
                <p>@greendotcorp.com</p>
              </view>
            </view>
          </wux-col>
        </wux-row>
        <wux-white-space size="large" />
        <wux-white-space size="large" />
        <wux-row>
          <wux-col span="10" offset="1">
            <view class="input">
              <view class="input-label">
                <text>English Name</text>
              </view>
              <input type="input-txt" @change="onEnglishNameChange" placeholder="Sixteen Liu" size="32" />
            </view>
            <!-- <wux-input placeholder="English Name" bind:change="onEnglishNameChange" placeholder="Six Liu" /> -->
          </wux-col>
        </wux-row>
      </view>
      <button class="btn-primary" open-type="getUserInfo" @tap="submit">
        <text>Submit</text>
      </button>
    </view>
    <view wx:if="{{showSucces}}" class="success-container">
      <view class="success-animate">
        <view class="success-title">Welcome</view>
        <view class="userinfo">
          <image class="userinfo-avatar" src="{{AvatarUrl}}"></image>
          <p class="user-name">{{englishName}}</p>
          <!-- <p class="user-name">{{userInfo.nickName}}</p> -->
        </view>
        <!-- <view class="success-name">{{englishName}}</view> -->
      </view>
      <button class="success-btn" @tap="goToWelcome">Party Information</button>
    </view>
    <view class="footer {{isIPX?'isIPX':''}}">
      <image class="side-background-se" src="https://ellist.cn/bulletmessage/static/img/H5-12.png"></image>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import Header from '@/components/header' // alias example
// import { $wuxBackdrop } from '../wux/index'
export default class Register extends wepy.page {
  components = {
    header: Header
  }
  config = {
    usingComponents: {
      'wux-wing-blank': '../wux/wing-blank/index',
      'wux-white-space': '../wux/white-space/index',
      'wux-row': '../wux/row/index',
      'wux-col': '../wux/col/index'
      // 'wux-button': '../wux/button/index',
      // 'wux-cell-group': '../wux/cell-group/index',
      // 'wux-cell': '../wux/cell/index',
      // 'wux-input': '../wux/input/index',
      // 'wux-radio-group': '../wux/radio-group/index',
      // 'wux-radio': '../wux/radio/index'
    }
  }
  computed = {
    AvatarUrl() {
      return this.$parent.globalData.userInfo.avatarUrl
    }
  }
  components = {}
  data = {
    email: '',
    englishName: '',
    numPeople: 0,
    isIPX: false,
    showSucces: false,
    numPeopleList: ['...', 'come along', 'bring 1 family member'],
    userInfo: {}
  }
  methods = {
    goToWelcome(e) {
      this.$redirect('./welcome')
    },
    onEmailChange(e) {
      this.email = e.detail.value
    },
    onEnglishNameChange(e) {
      this.englishName = e.detail.value
    },
    onNumPeopleChange(e) {
      this.numPeople = e.detail.value
      console.log(e.detail.value)
    },
    submit() {
      let self = this
      if (self.englishName === 'testing') {
        self.email = 'eee@gd.com'
        self.showSucces = true
        self.selfReg()
        return
      }

      if (!self.email) {
        wepy.showToast({
          title: 'email/name is empty',
          icon: 'none',
          duration: 2000
        })
        return
      }

      let url = `https://wtf.chinacloudsites.cn/api/WxUser/register`
      console.log(url)
      let loginData = this.$parent.globalData.userInfo
      loginData.email = self.email + '@greendotcorp.com'
      loginData.englishName = self.englishName
      console.log('loginData', loginData)

      // self.selfReg()
      // return

      wepy.request({
        url: url,
        method: 'POST',
        data: loginData,
        header: {
          'content-type': 'application/json' // 默认值
        },
        success: function(resp) {
          if (resp.data.isSuccess) {
            self.$parent.saveCacheApp('isRegisted', true) // cache isRegisted
            self.showSucces = true
            self.selfReg()
          } else {
            wepy.showToast({
              title: 'you have already register for the event',
              icon: 'none',
              duration: 2000
            })
            console.error(resp)
          }
          // self.$redirect('./welcome')
        },
        fail: function(err) {
          console.error(err)
          self.msg = err
          // self.$redirect('./transfer-fail');
        }
      })
    }
  }

  selfReg() {
    let self = this
    // ---------self reg user list start-------------------
    let urlreg = `https://ellist.cn/bulletmessage/api/client/setUser`
    let regData = this.$parent.globalData.userInfo
    regData.email = self.email + '@greendotcorp.com'
    // regData.nickName = 'ttee'
    regData.englishName = self.englishName
    regData.model = self.$parent.globalData.model
    console.log('regData', regData)
    wepy.request({
      url: urlreg,
      method: 'POST',
      data: regData,
      header: {
        'content-type': 'application/json' // 默认值
      },
      success: function(resp) {
        console.log('self reg success', resp)
      },
      fail: function(err) {
        console.error('self reg fail', err)
      }
    })
    // ---------self reg user list end-------------------
  }
  onLoad(parm, data) {
    let self = this
    self.isIPX = this.$parent.globalData.isIpx
    // console.log('isipx', self.isIPX)
    // console.log('this.$parent.getUserIn fo', this.$parent.getUserInfo)
    this.$parent.getUserInfo(
      info => {
        console.log('info', info)
        self.userInfo = info
      },
      err => {
        console.log(err)
      }
    )
    self.$apply()
  }
}
</script>
