<style lang="less">
@import '../theme.less';
// @import '../app.less';
.loading {
  margin-left: auto;
  margin-right: auto;
  margin-top: 40%;
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body" wx:if="{{!showLoading}}">
      <text>Please Login through QiYe Weixin</text>
    </view>
    <view class="body" wx:if="{{showLoading}}">
      <loading></loading>
      <!-- <wux-loading id="wux-loading" /> -->
      <!-- <wux-spin class="loading" wux-class="spin" size="large" /> -->
      <button wx:if="{{showReload}}" class="button2" @tap='reload'>
        <image class="icon" src="https://ellist.cn/wmtan/static/icon/gear.png"></image>
        <text>Reload</text>
      </button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import Header from '@/components/header'; // alias example
import Loading from '@/components/loading'; // alias example
// import { $wuxLoading } from '../wux/index'
// import { $wuxBackdrop } from '../wux/index'
let balanceI;

export default class PreLoad extends wepy.page {
  components = {
    header: Header,
    loading: Loading
  };
  config = {
    usingComponents: {
      // 'wux-loading': '../wux/loading/index',
      // 'wux-spin': '../wux/spin/index'
    }
  };
  components = {};
  data = {
    code: '',
    showReload: false,
    showLoading: true
  };
  methods = {
    reload(e) {
      wepy.reLaunch({ url: './preload' });
    }
  };

  Login(userInfo) {
    let self = this;
    let balanceRequest = {
      Nickname: this.$parent.globalData.userInfo.nickName,
      WxOpenId: this.$parent.globalData.userInfo.openid
    };
    self.goNextBaseOnConfiguration(true);
  }

  goNextBaseOnConfiguration(isRegistered) {
    let self = this;
    self.$parent.getConfig(false, config => {
      self.handleConfiguration(config, isRegistered);
    });
  }

  handleConfiguration(config, isRegistered) {
    // console.log('handleConfiguration===>');
    let self = this;
    if (config.debug) {
      console.log('debug');
    } else {
      console.log('Configuration===>', config);
    }
    // config.stage = '2';
    switch (config.stage) {
      case '1':
        self.$redirect('./shakeGroup');
        break;
      case '2':
        self.$redirect('./shake');
        // self.$redirect('./index');
        break;
      case '3':
        self.$redirect('./winPrize');
        // self.$redirect('./scanQR');
        break;
      case '4':
        self.$redirect('./endGame');
        break;
      default:
        self.$redirect('./index');
        break;
    }
  }
  async LoginProcess(sys) {
    let self = this;
    console.log('login process');
    if (sys.environment == 'wxwork') {
      let userInfo = await self.$parent.getUserInfoAsync();
      await self.wxworkLogin();
      console.log('async userinfo ==>', userInfo);
    } else {
      // 普通登陆----------------------------
      self.$parent.getConfig(false, config => {
        if (config.enableNormalLogin == 'true') {
          self.normalLogin();
        } else {
          self.showLoading = false;
          self.$apply();
        }
      });
    }
  }
  qyWeixinLogin() {
    let self = this;
    return new Promise((resolved, rejected) => {
      wx.qy.getEnterpriseUserInfo({
        success: function(res) {
          var userInfo = res.userInfo;
          var name = userInfo.name;
          var gender = userInfo.gender;
          self.$parent.globalData.userInfo.nickName = name;
          self.$parent.globalData.userInfo.englishName = name + '';
          self.$parent.saveCacheUser(self.$parent.globalData.userInfo);

          resolved(self.$parent.globalData.userInfo);
        },
        fail: rejected
      });
    });
  }

  checkPrizeWinning(qyid) {
    let self = this;
    return new Promise((resolved, rejected) => {
      let urlCheckPrize = 'https://ellist.cn/wmtan/api/db/winner/' + qyid;
      wepy.request({
        url: urlCheckPrize,
        method: 'GET',
        success: function(resp) {
          console.log(resp.data);
          if (!Array.isArray(resp.data) || resp.data.length > 0) {
            self.$parent.globalData.userInfo.winningInfo = resp.data[0];
            console.log('userInfo===>', self.$parent.globalData.userInfo);
          } else {
            self.$parent.globalData.userInfo.winningInfo = {};
          }
          console.log('qy id==>', qyid);
          resolved(self.$parent.globalData.userInfo.winningInfo);
          // self.goLogin(qyid);
        },
        fail: rejected
      });
    });
  }

  goLogin(openid) {
    let self = this;

    self.$parent.getUserInfo(
      info => {
        info.openid = openid;
        self.$parent.globalData.userInfo.openid = openid;
        self.$parent.saveCacheUser(self.$parent.globalData.userInfo);

        let body = {
          type: 1,
          target: 'Register',
          // arguments: [self.userInfo.nickName, self.userInfo.avatarUrl]
          arguments: [
            self.$parent.globalData.userInfo.openid,
            self.$parent.globalData.userInfo.avatarUrl
          ]
        };
        console.log('app => register user qy', body);
        self.$parent.wsSend(JSON.stringify(body));

        self.goNextBaseOnConfiguration(true);
      },
      err => {
        console.error('get userinfo failure', err);
        self.$redirect('./register');
      }
    );
  }
  onHide() {}
  onLoad(parm, data) {
    let self = this;
    self.showReload = false;
    setTimeout(() => {
      self.showReload = true;
      self.$apply();
    }, 10000);

    self.$apply();

    let sys = wx.getSystemInfoSync();
    self.LoginProcess(sys);
    console.log('preloainding===>');
  }

  async wxworkLogin() {
    let self = this;
    // 企业微信登陆----------------------------
    wx.qy.login({
      success: function(res) {
        console.log('wxwork==>', res);
        let urlLogin =
          'https://ellist.cn/wmtan/api/client/wxqylogin/' + res.code;
        console.log('code===>', res.code);
        wepy.request({
          url: urlLogin,
          method: 'GET',
          success: function(resp) {
            console.log('wxqylogin===>', resp);
            let qyid = resp.data;

            let p1 = self.qyWeixinLogin();
            let p2 = self.checkPrizeWinning(qyid);

            Promise.all([p1, p2]).then(() => {
              self.goLogin(qyid);
            });
          },
          fail: console.error
        });
      }
    });
  }

  normalLogin() {
    let self = this;
    wepy.login({
      success(res) {
        console.log('wx.login', res);
        if (res.code) {
          self.code = res.code;
          console.log('code', res);
        } else {
          console.log('登录失败！' + res.errMsg);
          return;
        }

        let urlLogin =
          'https://ellist.cn/wmtan/api/client/wxlogin/' + self.code;
        wepy.request({
          url: urlLogin,
          method: 'GET',
          success: function(resp) {
            console.log('wxLogin.openid===>', resp.data);
            self.goLogin(resp.data);
          },
          fail: function(err) {
            console.error(err);
          }
        });
      },
      complete() {}
    });
  }
}
</script>
