<style lang="less">
@import '../theme.less';
// @import '../buttons.less';

@colorNameBorder: #7a2c2d;
.body {
  input {
    border: 1px solid var(--colorFont);
  }
  .button2 {
    margin: 10px auto;
  }
  .album-container {
    width: 95%;
    display: flex;
    flex-wrap: wrap;
    justify-items: space-between;
    justify-content: space-around;
    margin-bottom: 70px;
    margin-top: -20px;
    .picture-item {
      width: 25%;
      margin: 10px;
      height: 120px;
      // border: 1px solid gold;

      .image-frame {
        width: 100%;
        height: 100%;
        position: relative;
        image {
          // border: 1px solid gold;
          box-shadow: 15px 0 15px -15px #000, -15px 0 15px -15px #000;
          max-width: 100%;
          max-height: 100%;
        }
        .avator {
          height: 32px;
          width: 32px;
          position: relative;
          // bottom: 260px;
          top: 25px;
          left: -10px;
          border-radius: 50%;
          border: 1px solid @colorBorder;
          box-shadow: 0 0 0 5px @colorBackground;
          .englishName {
            width: 200px;
            position: absolute;
            color: white;
            text-shadow: 0 0 1px currentColor, -1px -1px 1px @colorNameBorder,
              0 -1px 1px @colorNameBorder, 1px -1px 1px @colorNameBorder,
              1px 0 1px @colorNameBorder, 1px 1px 1px @colorNameBorder,
              0 1px 1px @colorNameBorder, -1px 1px 1px @colorNameBorder,
              -1px 0 1px @colorNameBorder;
            top: 0px;
            opacity: 0;
            transition: all;
            transition-duration: 0.5s;
          }
          image {
            width: 100%;
            height: 100%;
            border-radius: 50%;
          }
        }
        .showName {
          .englishName {
            top: -30px;
            opacity: 1;
            z-index: 100px;
          }
        }
        .delete-icon {
          height: 32px;
          width: 32px;
          position: absolute;
          // bottom: 260px;
          top: 27px;
          right: -15px;
          border-radius: 50%;

          border: 1px solid @colorBorder;
          box-shadow: 0 0 0 5px @colorBackground;
        }
      }
    }
  }
}
.footer {
  height: 80px;
  .pictureNum {
    text-align: center;
    color: gold;
  }
  #sendPic {
    position: fixed;
    right: 20px;
    bottom: 20px;
    display: flex;
    justify-content: center;
    width: 60px;
    height: 60px;
    .icon {
      width: 30px;
      height: 30px;
      align-self: center;
    }
  }
}
.newMessage {
  position: absolute;
  color: @colorFont;
  .newPicCount {
    background-color: red;
    padding: 5px;
    color: white;
    display: inline-block;
    border-radius: 50%;
    animation-name: newMessageBump;
    animation-duration: 1s;
    animation-iteration-count: infinite;
  }
}

@keyframes newMessageBump {
  from {
    transform: translateY(0px);
  }
  80% {
    transform: translateY(1px);
  }
  85% {
    transform: translateY(-1px);
  }
  90% {
    transform: translateY(1px);
  }
  95% {
    transform: translateY(-1px);
  }
  to {
    transform: translateY(0px);
  }
}
.pageScroll {
  height: 80px;
  .pageIndexContainer {
    display: flex;
    color: white;
    flex-direction: row;
    align-content: flex-start;
    align-items: flex-start;
    flex-wrap: nowrap;
    .pageIndex {
      margin: 2px 2px;
      border: 1px solid gold;
      min-width: 25px;
      display: inline-block;
      text-align: center;
      padding: 5px;
    }
    .currentPage {
      border: 1px solid white;
      background-color: @colorButtonActive;
    }
  }
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body">
      <view class="newMessage" wx:if="{{newPicCount>0}}"><span class="newPicCount">{{newPicCount}}</span> new pictures, pull down to refresh</view>

      <button wx:if="{{showPreviousButton}}" class="button2" @tap='moveUp'>
        <!-- <image class="icon" src="https://ellist.cn/wmtan/static/icon/help.png"></image> -->
        <text>Previous</text>
      </button>
      <view class="album-container">
        <repeat for="{{windowPictureList}}" key="index" index="key" item="val">
          <view class="picture-item">
            <view class="image-frame">
              <view class="avator" hover-class="showName">
                <view class="englishName">{{val.englishName}} </view>
                <image wx:if="{{val.type==1}}" src="https://wx.qlogo.cn/mmopen/vi_32/{{val.avator}}" lazy-load="true"></image>
                <image wx:if="{{val.type==0}}" src="{{val.avator}}" lazy-load="true"></image>
              </view>
              <image src="https://ellist.cn/wmtan/uploads/images/{{val.url}}" lazy-load="true" bindload="imgLoad" data-url='https://ellist.cn/wmtan/uploads/images/{{val.url}}' @tap="openSelectPic"></image>
              <image wx:if="{{isAdmin}}" class="delete-icon" src="https://ellist.cn/wmtan/static/icon/delete.png" data-url='https://ellist.cn/wmtan/uploads/images/{{val.url}}' lazy-load="true" @tap="deletePic"></image>
            </view>
            <!-- {{val}} -->
          </view>
        </repeat>
      </view>

      <button wx:if="{{showNextButton}}" class="button2" @tap='moveDown'>
        <!-- <image class="icon" src="https://ellist.cn/wmtan/static/icon/help.png"></image> -->
        <text>Next</text>
      </button>
      <scroll-view scroll-x="true" class="pageScroll">
        <view scroll-x="true" class="pageIndexContainer">
          <repeat for="{{pageItem}}" key="index" index="key" item="val">
            <view class="pageIndex {{currentPage==val?'currentPage':''}}" data-index="{{val}}" @tap="goToPage">{{val}}</view>
          </repeat>
        </view>
      </scroll-view>
    </view>
    <view class="footer">
      <view class="pictureNum">{{pictureList.length}} pictures left</view>
      <button id="sendPic" class="button button-glow button-circle button-action button-royal" @tap="sendPicture">
        <!-- <i class="fa fa-camera"></i> -->
        <image class="icon" src="https://ellist.cn/wmtan/static/icon/photo-camera-2.png"></image>
      </button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import Header from '@/components/header';
let prefixIcon = '#$%';
let prefixImg = 'img=>';
let pageSize = 24;

export default class Album extends wepy.page {
  config = {
    usingComponents: {},
    enablePullDownRefresh: true
  };
  components = {
    header: Header
  };
  data = {
    upPictureList: [],
    windowPictureList: [],
    pictureList: [],
    picturePreviewList: [],
    newPicCount: 0,
    pageItem: [],
    currentPage: 0
  };
  computed = {
    isAdmin() {
      return this.$parent.isAdmin();
    },
    showPreviousButton() {
      return this.upPictureList.length > 0;
    },
    showNextButton() {
      return this.pictureList.length > 24;
    }
  };
  methods = {
    goToPage(e) {
      let self = this;
      let index = e.currentTarget.dataset.index;
      self.pictureList = self.windowPictureList.concat(self.pictureList);
      self.windowPictureList = [];
      self.pictureList = self.upPictureList.concat(self.pictureList);
      self.upPictureList = [];
      for (var i = 0; i < index; i++) {
        this.goNextPage();
      }
      self.currentPage = index;
      self.$apply();
    },
    moveUp(e) {
      let self = this;
      self.currentPage--;
      self.pictureList = self.windowPictureList.concat(self.pictureList);
      self.windowPictureList = [];
      for (var i = 0; i < 24; i++) {
        self.windowPictureList.unshift(self.upPictureList.pop());
      }
    },
    moveDown(e) {
      this.goNextPage();
    },
    deletePic(e) {
      let current = e.currentTarget.dataset.url;
      current = current.replace(
        'https://ellist.cn/wmtan/uploads/images/',
        ''
      );
      let url = 'https://ellist.cn/wmtan/api/bullet/deletefiles';
      console.log('delete ' + current);
      this.$parent.wxRequest({
        url: url,
        method: 'POST',
        data: { fileName: current },
        success: function(resp) {
          console.log('delete ' + current, resp);

          wx.showToast({
            icon: 'success',
            title: 'deleted'
          });
        },
        fail: function(err) {
          console.error(err);
        }
      });
    },
    imgLoad(e) {
      let src = e.currentTarget.dataset.url;
      console.log(src);
    },
    openSelectPic(e) {
      let current = e.currentTarget.dataset.url;
      let urls = this.picturePreviewList;
      wx.previewImage({
        current,
        urls
      });
    },
    sendPicture(e) {
      let self = this;
      wx.chooseImage({
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          console.log(res.tempFilePaths);
          self.upload(res.tempFilePaths[0]);
        }
      });
    }
  };

  goNextPage() {
    let self = this;
    self.currentPage++;
    self.upPictureList = self.upPictureList.concat(self.windowPictureList);
    self.windowPictureList = [];
    let pictureCount =
      self.pictureList.length > 24 ? 24 : self.pictureList.length;
    for (var i = 0; i < pictureCount; i++) {
      self.windowPictureList.push(self.pictureList.shift());
    }
    wx.pageScrollTo({
      scrollTop: 0
    });
  }
  // -------------------- upload image start --------------------
  upload(path) {
    var self = this;
    var curImgList = [];
    wx.showToast({
      icon: 'loading',
      title: 'uploading...'
    });
    let url = 'https://ellist.cn/wmtan/api/bullet/upload';
    wx.uploadFile({
      url: url,
      filePath: path,
      name: 'file',
      header: { 'Content-Type': 'multipart/form-data' },
      formData: {
        nickName: self.userInfo.nickName,
        avatarUrl: self.userInfo.avatarUrl,
        englishName: this.$parent.globalData.user.englishName,
        openid: this.$parent.globalData.userInfo.openid
      },
      success: function(res) {
        console.log('upload success', res);
        self.loadPicList();
      },
      fail: function(e) {
        wx.showModal({
          title: 'fail',
          content: 'upload failure',
          showCancel: false
        });
      },
      complete: function() {
        wx.hideToast();
      }
    });
  }
  // -------------------- upload image end --------------------
  loadPicList() {
    let self = this;
    self.windowPictureList = [];
    self.pageItem = [];
    let url = 'https://ellist.cn/wmtan/api/bullet/uploadfiles';
    this.$parent.wxRequest({
      url: url,
      method: 'GET',
      success: function(resp) {
        console.log(resp);
        var list = resp.data;
        self.pictureList = [];
        for (let i of list) {
          let url = i;
          let englishName = '';
          let avator =
            'https://ellist.cn/wmtan/static/icon/system-camera.png';
          let type = '0';
          if (i.split('-_-').length > 2) {
            url = i;
            englishName = i.split('-_-')[0];
            avator = i.split('-_-')[2];
            avator = avator && avator.replace(/\.\w{3,4}$/, '') + '/132';
            type = '1';
          } else {
            englishName = i.replace(
              'https://ellist.cn/wmtan/uploads/images/',
              ''
            );
          }
          self.pictureList.push({
            url,
            englishName,
            avator,
            type
          });
        }

        let pageNum = Math.ceil(self.pictureList.length / pageSize);
        for (var pi = 0; pi < pageNum; pi++) {
          self.pageItem.push(pi + 1);
        }

        self.picturePreviewList = [];
        for (let vu of self.pictureList) {
          self.picturePreviewList.push(
            'https://ellist.cn/wmtan/uploads/images/' + vu.url
          );
        }
        let pictureCount =
          self.pictureList.length > 24 ? 24 : self.pictureList.length;
        for (var i = 0; i < pictureCount; i++) {
          self.windowPictureList.push(self.pictureList.shift());
        }
        console.log('self.pictureList==>', self.windowPictureList);
        self.$apply();
        wepy.stopPullDownRefresh();
      },
      fail: function(err) {
        console.error(err);
      }
    });
    self.newPicCount = 0;
    self.$apply();
  }
  onPullDownRefresh() {
    console.log('refresh');
    this.loadPicList();
  }
  onSocketMessage(res) {
    let self = this;
    var data = JSON.parse(res.data.replace(String.fromCharCode(0x1e), ''));
    console.log('album=>wsresponse', data);
    if (data.target) {
      switch (data.target) {
        case 'ReceiveMessage':
          // self.msg = data.arguments[0] + '|' + data.arguments[1]
          if (!data.arguments[1]) return; // handle the heartbeat ping
          let messagType = 0;
          let msg = data.arguments[1];
          let line = {
            avatarUrl: data.arguments[0],
            msg: data.arguments[1], // msg,
            nickName: data.arguments[2],
            type: messagType
          };
          if (line.msg.indexOf(prefixImg) > -1) {
            line.type = 2; // image
            line.msg = line.msg.replace(prefixImg, '');
            self.newPicCount++;
          }
          console.log('new picture', line);
          self.$apply();
          break;
        default:
          break;
      }
      self.$apply();
    }
  }
  onLoad(parms, data) {
    this.loadPicList();
    let self = this;
    this.$parent.getUserInfo(info => {
      self.userInfo = info;
    });
  }
  onShow() {}
}
</script>
