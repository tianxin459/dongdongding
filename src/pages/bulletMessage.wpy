<style lang="less">
.body {
  // background-color: var(--colorGreenGD);
  color: white;
}

.title {
  width: 100%;
  font-weight: 200;
}

.input-container {
  width: 100%;
}

.ratio {
  // border-bottom: 2px solid green;
}

.input {
  // border: 1px solid green;
  width: 100%;
  .input-label {
  }
  input {
    // border: 1px solid green;
    height: 4ex;
    border-bottom: 2px solid green;
  }
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body">
      <view>
        bullet message
        <view>
          Msg:{{msg}}
        </view>
      </view>
    </view>
    <view class="footer">
      <wux-wing-blank size="default">
        <wux-button class="btnLogin" block outline type="balanced" @tap="submit">Submit</wux-button>
      </wux-wing-blank>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import Header from '@/components/header' // alias example
// import Hub from '@/utils/miniProgramSignalr.js'
// var hub = require('../utils/miniProgramSignalr.js')

//https://ellist.cn/bulletmessage/chat
//ws://ellist.cn/bulletmessage/chat
// import { $wuxBackdrop } from '../wux/index'
export default class BulletMessage extends wepy.page {
  components = {
    header: Header
  }
  config = {
    usingComponents: {
      'wux-wing-blank': '../wux/wing-blank/index',
      'wux-white-space': '../wux/white-space/index'
      // 'wux-row': '../wux/row/index',
      // 'wux-col': '../wux/col/index'
      // 'wux-button': '../wux/button/index'
      // 'wux-cell-group': '../wux/cell-group/index',
      // 'wux-cell': '../wux/cell/index',
      // 'wux-input': '../wux/input/index',
      // 'wux-radio-group': '../wux/radio-group/index',
      // 'wux-radio': '../wux/radio/index'
    }
  }
  components = {}
  data = {
    msg: '',
    hubConnect: {},
    userInfo: {}
  }
  methods = {
    onEmailChange(e) {
      this.email = e.detail.value
    },
    onEnglishNameChange(e) {
      this.englishName = e.detail.value
    },
    onNumPeopleChange(e) {
      this.numPeople = e.detail.value
      console.log(e.detail.value)
    },
    submit() {
      // this.wsSend('{"type":1,"target":"SendMessage","arguments":["eee","ccc"]}')
      // this.wsSend('{"protocol":"json","version":1}')

      let body = {
        type: 1,
        target: 'Register',
        arguments: ['eee', 'cbcdc']
      }
      this.$parent.wsSend(JSON.stringify(body)) //发送握手包
      // this.wsSend('{"protocol":"json","version":1}') //发送握手包
    }
  }

  onLoad(parm, data) {
    // console.log(websocket)
  }

  onShow() {
    let self = this
    console.log('bulletMessage=>onshow')
    // wepy.onSocketOpen(res => {
    //   console.log('bulletMessage=>onSocketOpen')
    //   self.$parent.wsSend('{"protocol":"json","version":1}')

    //   this.$parent.getUserInfo(info => {
    //     self.userInfo = info
    //     let body = {
    //       type: 1,
    //       target: 'Register',
    //       arguments: [self.userInfo.nickName, self.userInfo.avatarUrl]
    //     }
    //     console.log('register user', body)
    //     self.$parent.wsSend(JSON.stringify(body))
    //   })

    //   wx.onSocketMessage(function(res) {
    //     console.log('wsresponse', res)
    //     //接收消息回调
    //     var data = res.data.replace(String.fromCharCode(0x1e), '') //返回时去掉分隔符
    //     console.log('recv:' + data)
    //   })
    // })

    wx.onSocketMessage(function(res) {
      console.log('bulletMessage=>wsresponse', res)
      //接收消息回调
      var data = JSON.parse(res.data.replace(String.fromCharCode(0x1e), '')) //返回时去掉分隔符
      if (!!data.target) {
        switch (data.target) {
          case 'ReceiveMessage':
            self.msg = data.arguments[0] + '|' + data.arguments[1]
            break
          default:
            break
        }
        self.$apply()
      }
    })
  }

  // wsSend(msg) {
  //   // msg += String.fromCharCode(0x1e)
  //   // let body = {
  //   //   arguments: data,
  //   //   target: method, //SignalR端方法
  //   //   type: 1
  //   // }
  //   // msg = `${JSON.stringify(body)}${String.fromCharCode(0x1e)}`
  //   let msgdata = `${msg}${String.fromCharCode(0x1e)}`
  //   console.log('send:' + msgdata)
  //   wepy.sendSocketMessage({
  //     data: msgdata
  //   })
  // }
}
</script>
