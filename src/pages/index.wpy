<style lang="less">
.userinfo {
  display: flex;
  flex-direction: row;
  /* background-color: #3e8bf8; */
  image {
    height: 50rpx;
    width: 50rpx;
    border-radius: 50%;
    margin-right: 5rpx;
  }
}

.listBoard {
  border: 1px solid gold;
}

.balance-container {
  width: 500rpx;
  height: 500rpx;
  align-self: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  .text {
    position: absolute;
    text-align: center;
    align-self: center;
    font-size: 150rpx;
    text-shadow: var(--colorGrey) 3px 3px 3px;
    .unit {
      font-size: 40rpx;
      position: relative;
      top: -10px;
    }
  }
}
.message {
  width: 100%;
}

.balance-bar {
  background-color: var(--colorBackgrounda);
  color: white;
  width: 100%;
  font-weight: 900;
  // height:20vh;
  .text {
    text-align: center;
    padding: 10rpx 50rpx;
  }
  .balance {
    text-align: center;
    font-size: 100rpx;
    padding: 0rpx 100rpx;
    text-shadow: var(--colorGrey) 3px 3px 3px;
  }
  .unit {
    font-size: 40rpx;
    margin-left: 20rpx;
  }
}

.functionList {
  padding: 30rpx;
  background-color: var(--colorBackground);
  width: 100%;
  height: 100%;
  scroll-behavior: auto;
  .fList {
    background-color: red;
    width: 80%;
  }
  > view {
    width: 95%;
    margin-top: 10px;
    border-radius: 10rpx;
    margin-right: auto;
    margin-left: auto;
    .item {
      background-color: white;
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      height: 10vh;
      margin-bottom: 2rpx;
      wux-icon {
        align-self: center;
        margin: 0 20rpx;
      }
      text {
        align-self: center;
        font-size: 40rpx;
      }
    }
  }
}

.btn2 {
  display: flex;
  flex-direction: column;
  p {
    font-size: 40rpx;
    font-weight: 300;
  }
}

.btn-bar {
  background-color: var(--colorBackgroundb);
  height: 15vh;
  display: flex;
  flex-direction: row;
  width: 100%;
  z-index: 10;
  .item {
    width: 50%;
    display: flex;
    justify-content: center;
    wux-icon {
      align-self: center;
      margin: 0 10rpx;
    }
    text {
      align-self: center;
      color: white;
    }
  }
  .item-middle {
    display: flex;
    // display: none;
    width: 120px;
    height: 90px;
    margin-top: -20rpx;
    border: 10rpx solid gainsboro;
    text-align: center;
    background-color: white;
    margin-left: auto;
    margin-right: auto;
    border-radius: 50%;
    justify-content: center;
    flex-direction: column;
    color: var(--colorBackgrounda);
    text {
      align-self: center;
      font-weight: bold;
      font-size: 30rpx;
    }
    // position:absolute;
  }
}
</style>

<template>
  <view class="container">
    <header></header>
    <showbar></showbar>
    <view class="body">
      <!-- <view class="message">
        <wux-notice-bar loop speed="100" content="{{msg}}" />
      </view> -->
      <view class="balance-bar">
        <view class="text">
          Balance
        </view>
        <view class="balance">
          <!-- <span class="unit">G</span> -->
          {{balance}}
        </view>

      </view>
      <view class="btn-bar">
        <view class="item" @tap="payMoney">
          <wux-icon wux-class="icon" color="white" type="ios-qr-scanner" size="30" slot="icon-on" /><text>Pay</text></view>
        <view class="item-middle"><text>Send</text><text>Message</text></view>
        <view class="item" @tap="myQRCode">
          <wux-icon wux-class="icon" color="white" type="ios-barcode" size="30" slot="icon-on" /><text>Recieve</text></view>
      </view>
      <view class="functionList">
        <view>
          <view class="item" @tap='goHistory'>
            <wux-icon wux-class="icon" type="ios-qr-scanner" size="30" slot="icon-on" />
            <text>Transaction History</text>
          </view>
          <view class="item" @tap="goReg">
            <wux-icon wux-class="icon" type="ios-qr-scanner" size="30" slot="icon-on" />
            <text>Register for Party</text>
          </view>
          <view class="item" @tap='goLogin'>
            <wux-icon wux-class="icon" type="ios-qr-scanner" size="30" slot="icon-on" />
            <text>Refill Balance</text>
          </view>
           <view class="item" @tap='goShake'>
            <wux-icon wux-class="icon" type="ios-qr-scanner" size="30" slot="icon-on" />
            <text>Shake ~ Shake</text>
          </view>
        </view>
      </view>
    </view>
    <wux-floating-button buttons="{{ buttons }}" bind:click="showbarClick" />
  </view>
</template>
<script>
import wepy from 'wepy'
import Header from '@/components/header'
// import { $wuxBackdrop } from '../wux/index'
let balanceI
let notificationI
let urlNotification = 'https://wtf.chinacloudsites.cn/api/notification'

export default class Index extends wepy.page {
  components = {
    header: Header
  }
  config = {
    usingComponents: {
      'wux-button': '../wux/button/index',
      'wux-icon': '../wux/icon/index',
      // 'wux-tabbar': '../wux/tabbar/index',
      // 'wux-tabbar-item': '../wux/tabbar-item/index',
      'wux-wing-blank': '../wux/wing-blank/index',
      'wux-white-space': '../wux/white-space/index',
      'wux-row': '../wux/row/index',
      'wux-col': '../wux/col/index',
      // 'wux-qrcode': '../wux/qrcode/index',
      // 'wux-grids': '../wux/grids/index',
      // 'wux-grid': '../wux/grid/index',
      // 'wux-animation-group': '../wux/animation-group/index',
      // 'wux-backdrop': '../wux/backdrop/index',
      'wux-notice-bar': '../wux/notice-bar/index',
      // 'wux-circle': '../wux/circle/index',
      'wux-cell-group': '../wux/cell-group/index',
      'wux-cell': '../wux/cell/index',
      'wux-floating-button': '../wux/floating-button/index'
    }
  }
  components = {}
  data = {
    userInfo: {},
    qrCodeUrl: '.',
    qrCodeData: 'no data',
    qrCodeColor: '#1ab16c',
    // qrCodeColor:"#1ab16c",
    qrCode: {
      classNames: 'wux-animate--fadeIn',
      enter: true,
      exit: true,
      in: false
    },
    balance: 10,
    showQRCode: false,
    msg: '---',
    isIPX: false,
    percent: 70,
    //floating button - start
    buttons: [
      {
        link: 'index',
        label: 'Style #1'
      },
      {
        link: 'index2',
        label: 'Style #2'
      },
      {
        link: 'index3',
        label: 'Style #3'
      }
    ]
    //floating button - end
  }
  methods = {
    showbarClick(e) {
      // console.log(e.detail.value.link)
      this.$redirect('./' + e.detail.value.link)
    },
    onClick() {
      // console.log('on click')
      this.msg = '666'
    },
    myQRCode() {
      var self = this
      self.$navigate('./qrcode')
    },
    goHistory() {
      let self = this
      self.$navigate('./transactionHistory')
    },
    goReg() {
      let self = this
      self.$navigate('./register')
    },
    goShake() {
      let self = this
      self.$navigate('./shake')
    },
    goLogin() {
      let self = this
      self.$navigate('./login')
    },
    payMoney() {
      var self = this
      wepy.scanCode({
        success: function(resp) {
          // console.log(resp.result)
          self.msg = resp.result
          if (self.msg == 'no') self.$apply()
          self.$navigate('./transfer', JSON.parse(resp.result))
        },
        fail: function(err) {
          console.error('err')
          console.error('err', err)
        }
      })
    }
  }
  getNotification = () => {
    var self = this
    var url = urlNotification
    wepy.request({
      url: url,
      method: 'GET',
      success: function(resp) {
        console.log('notificationContent', resp.data.item.notificationContent)
        self.msg = resp.data.item.notificationContent
        self.$apply()
      },
      fail: function(err) {
        self.$redirect('./transfer-fail')
      }
    })
  }
  getInfo = () => {
    var self = this

    // if (this.$parent.globalData.isDebug) {
    //   console.log(self.$parent.globalData.user.balance);
    //   self.balance = self.$parent.globalData.user.balance;
    //   self.$apply();
    //   return;
    // }

    var url =
      'https://wtf.chinacloudsites.cn/api/WxUser/' + self.userInfo.nickName
    wepy.request({
      url: url,
      method: 'GET',
      success: function(resp) {
        self.$parent.globalData.user.balance = resp.data.item[0].balance
        let balance = self.$parent.globalData.user.balance
        self.balance = balance
        self.percent = (self.balance / 10) * 10
        // console.log('balance', balance)
        self.$apply()
      },
      fail: function(err) {
        self.$redirect('./transfer-fail')
      }
    })
  }
  onLoad() {
    console.log('index onload')
    var self = this
    self.isIPX = this.$parent.globalData.isIpx
    console.log(this.$parent.globalData.isIpx)
    this.$parent.getUserInfo(info => {
      self.userInfo = info
      self.msg =
        'here will display public notice information: blah...blah...blah...'
      // self.qrCodeUrl = self.$parent.globalData.qrCodeUrl + info.nickName;
      var { nickName, avatarUrl } = self.userInfo
      var qrdata = { nickName, avatarUrl }
      self.qrCodeData = JSON.stringify(qrdata)
      // console.log(self.qrCodeData)
      // console.log(JSON.parse(self.qrCodeData))
      self.$apply()
    })
  }

  onShow() {
    console.log('index onShow')
    this.getInfo()
    this.getNotification()
    balanceI = setInterval(this.getInfo, 3000)
    notificationI = setInterval(this.getNotification, 5000)
  }
  onHide() {
    console.log('onhide')
    clearInterval(balanceI)
    clearInterval(notificationI)
  }
  onUnload() {
    console.log('onUnload')
    clearInterval(balanceI)
    clearInterval(notificationI)
  }
}
</script>
