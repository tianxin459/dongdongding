<style lang="less">
.userinfo {
  display: flex;
  flex-direction: row;
  /* background-color: #3e8bf8; */
  image {
    height: 50rpx;
    width: 50rpx;
    border-radius: 50%;
    margin-right: 5rpx;
  }
}

.listBoard {
  border: 1px solid gold;
}

.balance-container {
  width: 500rpx;
  height: 500rpx;
  align-self: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  .text {
    position: absolute;
    text-align: center;
    align-self: center;
    font-size: 150rpx;
    text-shadow: var(--colorGrey) 3px 3px 3px;
    .unit {
      font-size: 40rpx;
      position: relative;
      top: -10px;
    }
  }
}
.message {
  width: 100%;
}

.balance-bar {
  background-color: var(--colorBackgrounda);
  color: white;
  width: 100%;
  .text {
    text-align: center;
    padding: 10rpx 50rpx;
    color: var(--colorFont);
  }
  .balance {
    text-align: center;
    font-weight: bolder;
    font-size: 100rpx;
    padding: 0rpx 100rpx;
    text-shadow: var(--colorGrey) 3px 3px 3px;
  }
  .unit {
    font-size: 40rpx;
    margin-left: 20rpx;
    position: absolute;
    margin-top: 60rpx;
  }
}

.functionList {
  padding: 30rpx;
  background-color: var(--colorBackground);
  width: 100%;
  height: 100%;
  scroll-behavior: auto;
  .button {
    width: 100%;
    flex-direction: row;
    border-radius: 20rpx;
    wux-icon {
      align-self: center;
      margin: auto 20rpx;
    }
    text {
      align-self: center;
      font-size: 40rpx;
    }
  }
  .fList {
    background-color: red;
    width: 80%;
  }
  > view {
    width: 90%;
    margin-top: 20rpx;
    border-radius: 10rpx;
    margin-right: auto;
    margin-left: auto;
    .item {
      // background-color: white;
      border: 2px solid var(--colorBorder);
      border-radius: 20rpx;
      color: white;
      display: flex;
      flex-direction: row;
      justify-content: center;
      height: 80rpx;
      // margin-bottom: 2rpx;
      margin: 20rpx 0;
      wux-icon {
        align-self: center;
        margin: 0 20rpx;
      }
      text {
        align-self: center;
        font-size: 40rpx;
      }
    }
  }
}

.btn2 {
  display: flex;
  flex-direction: column;
  p {
    font-size: 40rpx;
    font-weight: 300;
  }
}

.btn-bar {
  background-color: var(--colorBackgroundb);
  border-radius: 20rpx;
  height: 140rpx;
  display: flex;
  flex-direction: row;
  width: 90%;
  z-index: 10;
  margin: 20rpx 0;
  .item {
    width: 50%;
    display: flex;
    justify-content: center;
    wux-icon {
      align-self: center;
      margin: 0 10rpx;
    }
    text {
      align-self: center;
      color: white;
    }
  }
  .item-middle {
    display: flex;
    // display: none;
    width: 240rpx;
    height: 180rpx;
    margin-top: -20rpx;
    border: 2rpx solid var(--colorBorder);
    box-shadow: 0 0 0 10rpx var(--colorBackground);
    text-align: center;
    background-color: var(--colorGreenGD);
    margin-left: auto;
    margin-right: auto;
    border-radius: 50%;
    justify-content: center;
    flex-direction: column;
    color: var(--colorBackgrounda);
    text {
      align-self: center;
      font-weight: bolder;
      font-size: 30rpx;
      color: white;
    }
    // position:absolute;
  }
}

.bulletMessage-container {
  position: fixed;
  text-align: center;
  padding: 40rpx 0px;
  color: var(--colorFont);
  font-weight: 500;
  border-radius: 10rpx;
  background: url(https://ellist.cn/bulletmessage/static/img/h5-18.png)
    no-repeat;
  background-size: 100% 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  z-index: 900;
  width: 95%;
  flex-direction: column;
  transform: rotateX(-90deg);
  perspective: 500px;
  transform-style: preserve-3d;
  transition: all 0.5s;
  input {
    border-bottom: 2px solid #a94076;
    box-shadow: 2px;
    font-size: 40rpx;
    height: 4ex;
    color: white;
    width: 80%;
    margin: 0 auto;
    font-weight: bolder;
  }
  .bulletShortcut {
    display: flex;
    color: var(--colorFont);
    width: 80%;
    flex-direction: row;
    flex-wrap: wrap;
    margin: 0 auto;
    margin-bottom: 60rpx;
    button.button {
      font-weight: bolder;
      color: white;
      // background-color: transparent;
      width: 30%;
      margin: 1%;
      height: 100rpx;
      // border: 1px solid white;
      // border-radius: 5px;
      image {
        height: 90%;
        width: 90%;
        margin: 0 auto;
      }
    }
    button.button:active {
      background-color: #823d78;
    }
  }
}
.showBullet {
  transform: rotateX(0deg);
}

#curtain {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0px;
  left: 0px;
  background-color: gray;
  opacity: 0.5;
  z-index: 99;
  display: none;
}
#curtain.showCurtain {
  display: block;
}

.footer {
  .side-background-se {
    height: 300rpx;
    bottom: 100rpx;
  }
  .side-background-sw {
    height: 200rpx;
  }
}
</style>

<template>
  <view class="container">
    <header></header>
    <showbar></showbar>
    <view class="body">
      <!-- <view class="message">
        <wux-notice-bar loop speed="100" content="{{msg}}" />
      </view> -->
      <view class="balance-bar">
        <view class="text">
          Balance
        </view>
        <view class="balance">
          {{balance}}
          <span class="unit">G</span>
        </view>

      </view>
      <view class="btn-bar">
        <view class="item" @tap="payMoney">
          <wux-icon wux-class="icon" color="white" type="ios-qr-scanner" size="30" slot="icon-on" /><text>Pay</text></view>
        <view class="item-middle logoGD" @tap="showSendBulletMessage">
          <!-- <text>Send</text>
          <text>Message</text> -->
        </view>
        <view class="item" @tap="myQRCode">
          <wux-icon wux-class="icon" color="white" type="ios-barcode" size="30" slot="icon-on" /><text>Recieve</text></view>
      </view>
      <view class="functionList">
        <view>
          <button class="button" data-url='./liveChat' @tap='nav'>
            <!-- https://ionicons.com -->
            <!-- <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/H5Icon-20.png"></image> -->
            <wux-icon wux-class="icon" type="ios-text" size="30" slot="icon-on" />
            <text>Live Chat</text>
          </button>
          <button class="button" @tap='goHistory'>
            <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/H5Icon-19.png"></image>
            <text>Transaction History</text>
          </button>
          <button class="button" data-url='./album' @tap='nav'>
            <wux-icon wux-class="icon" type="ios-photos" size="30" slot="icon-on" />
            <text>Album</text>
          </button>
          <button class="button" @tap='goShake'>
            <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/H5Icon-22.png"></image>
            <text>Shake ~ Shake</text>
          </button>
          <button class="button" data-url='./welcome' @tap='nav'>
            <wux-icon wux-class="icon" type="ios-information-circle-outline" size="30" slot="icon-on" />
            <text>Party Infomation</text>
          </button>
          <button wx:if="{{isAdmin||displayRefill}}" class="button {{isAdmin?'isAdmin':''}}" data-url='./refill' @tap='nav'>
            <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/H5Icon-21.png"></image>
            <text>Charge Balance</text>
          </button>
          <button wx:if="{{isAdmin||displayCheckin}}" class="button {{isAdmin?'isAdmin':''}}" data-url='./checkin' @tap='nav'>
            <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/H5Icon-23.png"></image>
            <text>CheckIn for Party</text>
          </button>
          <button wx:if="{{isAdmin||displayRegister}}" class="button {{isAdmin?'isAdmin':''}}" @tap="goReg">
            <wux-icon wux-class="icon" type="ios-bug" size="30" slot="icon-on" />
            <text>Register for Party</text>
          </button>
          <button class="button isAdmin" data-url='./admin' @tap='nav' wx:if="{{isAdmin}}">
            <wux-icon wux-class="icon" type="ios-refresh" size="30" slot="icon-on" />
            <text>Admin</text>
          </button>
        </view>
      </view>
    </view>
    <!----------------------------- bulletmessage start -------------------------------->
    <view class="bulletMessage-container {{showBullet?'showBullet':''}}">
      <wux-white-space body-style="height: 30rpx"></wux-white-space>
      <wux-wing-blank size="default">
        <view class="title">Send To Big Screen</view>
        <!-- focus="{{showBullet}}"  -->
        <input type="input-txt" @input="onbulletMessageInput" value="{{bulletMessage}}" placeholder="" maxlength="30" />
      </wux-wing-blank>
      <wux-wing-blank size="default">
        <button class="button" @tap="sendBulletMessage">Send to Big Screen</button>
        <button id="camera" class="button" @tap="sendPicture">
          <image class="icon" src="https://ellist.cn/bulletmessage/static/icon/photo-camera-2.png"></image>
        </button>
        <!-- <wux-button class="btnLogin" block type="balanced" @tap="sendBulletMessage">Send</wux-button> -->
      </wux-wing-blank>
      <wux-wing-blank size="default">
        <view class="bulletShortcut">
          <button class="button" data-tag="clap" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/clapping.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-13.png"></image>
          </button>
          <button class="button" data-tag="like" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/like.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-14.png"></image>
          </button>
          <button class="button" data-tag="star" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/star.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-16.png"></image>
          </button>
          <button class="button" data-tag="cheers" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/star.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-15.png"></image>
          </button>
          <button class="button" data-tag="horn" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/star.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-17.png"></image>
          </button>
          <button class="button" data-tag="money" @tap="sendBulletShortcut">
            <!-- <image src="../static/img/star.png"></image> -->
            <image src="https://ellist.cn/bulletmessage/static/icon/H5Icon-18.png"></image>
          </button>
        </view>
      </wux-wing-blank>
    </view>
    <view class="footer {{isIPX?'isIPX':''}}">
      <image class="side-background-sw" src="https://ellist.cn/bulletmessage/static/img/H5-13.png"></image>
      <image class="side-background-se" src="https://ellist.cn/bulletmessage/static/img/H5-15.png"></image>
    </view>
    <!------------------------------ bulletmessage end---------------------------------->
    <!-- <wux-floating-button buttons="{{ buttons }}" bind:click="showbarClick" /> -->
  </view>
  <view id="curtain" @tap="onCurtainTap" class="{{showCurtain?'showCurtain':''}}"></view>
</template>
<script>
import wepy from 'wepy'
import Header from '@/components/header'
// import { $wuxBackdrop } from '../wux/index'
let balanceI
let notificationI
let urlNotification = 'https://wtf.chinacloudsites.cn/api/notification'

export default class Index extends wepy.page {
  components = {
    header: Header
  }
  config = {
    usingComponents: {
      'wux-button': '../wux/button/index',
      'wux-icon': '../wux/icon/index',
      // 'wux-tabbar': '../wux/tabbar/index',
      // 'wux-tabbar-item': '../wux/tabbar-item/index',
      'wux-wing-blank': '../wux/wing-blank/index',
      'wux-white-space': '../wux/white-space/index',
      // 'wux-row': '../wux/row/index',
      // 'wux-col': '../wux/col/index',
      // 'wux-qrcode': '../wux/qrcode/index',
      // 'wux-grids': '../wux/grids/index',
      // 'wux-grid': '../wux/grid/index',
      // 'wux-animation-group': '../wux/animation-group/index',
      // 'wux-backdrop': '../wux/backdrop/index',
      // 'wux-notice-bar': '../wux/notice-bar/index',
      // 'wux-circle': '../wux/circle/index',
      // 'wux-cell-group': '../wux/cell-group/index',
      // 'wux-cell': '../wux/cell/index',
      'wux-floating-button': '../wux/floating-button/index'
    }
  }
  computed = {
    isAdmin() {
      return this.$parent.isAdmin()
    }, // isRegisted
    displayRefill() {
      let refillTime = this.$parent.getCacheApp('refill')
      console.log('refillTime=' + refillTime)
      if (refillTime >= 1) return false
      return true
    },
    displayRegister() {
      return !this.$parent.getCacheApp('isRegisted')
    },
    displayCheckin() {
      return !this.$parent.getCacheApp('isCheckedIn')
    }
  }
  components = {}
  data = {
    showBullet: false,
    showCurtain: false,
    bulletMessage: '',
    userInfo: {},
    qrCodeUrl: '.',
    qrCodeData: 'no data',
    qrCodeColor: '#1ab16c',
    // qrCodeColor:"#1ab16c",
    qrCode: {
      classNames: 'wux-animate--fadeIn',
      enter: true,
      exit: true,
      in: false
    },
    balance: 10,
    showQRCode: false,
    msg: '---',
    isIPX: false,
    percent: 70
  }
  methods = {
    sendPicture(e) {
      let self = this
      wx.chooseImage({
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          console.log(res.tempFilePaths)
          self.upload(res.tempFilePaths[0])
        }
      })
    },
    sendBulletShortcut(e) {
      let shortcut = e.target.dataset.tag
      let prefix = '#$%'
      console.log(shortcut)
      this.sendBulletMessage(prefix + shortcut)
      this.bulletMessage = ''
      this.$apply()
    },
    onCurtainTap(e) {
      this.showBullet = false
      this.showCurtain = false
      this.bulletMessage = ''
      this.$apply()
    },
    showSendBulletMessage(e) {
      this.showBullet = true
      this.showCurtain = true
      this.$apply()
    },
    sendBulletMessage(e) {
      console.log(this.bulletMessage)
      this.sendBulletMessage(this.bulletMessage)
      this.bulletMessage = ''
      this.showBullet = false
      this.showCurtain = false
      this.$apply()
    },
    onbulletMessageInput(e) {
      this.bulletMessage = e.detail.value
    },
    showbarClick(e) {
      // console.log(e.detail.value.link)
      this.$redirect('./' + e.detail.value.link)
    },
    onClick() {
      // console.log('on click')
      this.msg = '666'
    },
    myQRCode() {
      var self = this
      self.$navigate('./qrcode')
    },
    nav(e) {
      // console.log(e.target.dataset)
      this.$navigate(e.target.dataset.url)
    },
    goHistory() {
      let self = this
      self.$navigate('./transactionHistory')
    },
    goReg() {
      let self = this
      self.$navigate('./register')
    },
    goShake() {
      let self = this
      self.$navigate('./shake')
    },
    goLogin() {
      let self = this
      self.$navigate('./login')
    },
    payMoney() {
      var self = this
      wepy.scanCode({
        success: function(resp) {
          // console.log(resp.result)
          self.msg = resp.result
          if (self.msg === 'no') self.$apply()
          console.log(resp)
          self.$navigate('./transfer', JSON.parse(resp.result))
        },
        fail: function(err) {
          console.error('err', err)
        }
      })
    }
  }
  toggleCurtain(val) {
    this.showCurtain = val
  }
  getNotification = () => {
    var self = this
    var url = urlNotification
    wepy.request({
      url: url,
      method: 'GET',
      success: function(resp) {
        console.log('notificationContent', resp.data.item.notificationContent)
        self.msg = resp.data.item.notificationContent
        self.$apply()
      },
      fail: function(err) {
        self.$redirect('./transfer-fail')
      }
    })
  }
  getInfo = () => {
    var self = this
    this.$parent.getUserInfo(info => {
      console.log('index=>getInfo', info)
      var url = 'https://wtf.chinacloudsites.cn/api/WxUser/' + info.nickName
      console.log('index=>balanceurl', url)
      wepy.request({
        url: url,
        method: 'GET',
        success: function(resp) {
          console.log(resp)
          if (!resp.data.item[0]) {
            console.error('balance no item, go to registration')
            self.$redirect('./register')
          } else {
            self.$parent.globalData.user.balance = resp.data.item[0].balance
            self.$parent.globalData.user.englishName =
              resp.data.item[0].englishName
            let balance = self.$parent.globalData.user.balance
            self.balance = balance
            self.percent = (self.balance / 10) * 10
            self.$apply()
          }
        },
        fail: function(err) {
          console.error(err)
          self.$redirect('./transfer-fail')
        }
      })
    })
  }

  // -------------------- upload image start --------------------
  upload(path) {
    var self = this
    var curImgList = []
    wx.showToast({
      icon: 'loading',
      title: 'uploading...'
    })
    let url = 'https://ellist.cn/bulletmessage/api/bullet/upload'
    wx.uploadFile({
      url: url,
      filePath: path,
      name: 'file',
      header: { 'Content-Type': 'multipart/form-data' },
      formData: {
        nickName: self.userInfo.nickName,
        avatarUrl: self.userInfo.avatarUrl
      },
      success: function(res) {
        console.log('upload success', res)
      },
      fail: function(e) {
        wx.showModal({
          title: 'fail',
          content: 'upload failure',
          showCancel: false
        })
      },
      complete: function() {
        wx.hideToast()
      }
    })
  }
  // -------------------- upload image end --------------------
  onLoad(parms, data) {
    console.log('index onload', parms, data)
    var self = this
    self.isIPX = this.$parent.globalData.isIpx
    // console.log(this.$parent.globalData.isIpx)
    this.$parent.getUserInfo(info => {
      self.userInfo = info
      self.msg =
        'here will display public notice information: blah...blah...blah...'
      var qrdata = {
        nickName: info.nickName,
        avatarUrl: info.avatarUrl
      }
      self.qrCodeData = JSON.stringify(qrdata)
      self.$apply()
    })
    self.balance = parms.balance
    self.percent = (self.balance / 10) * 10
    self.$apply()
  }

  onShow() {
    let self = this
    console.log('index onShow')
    this.getInfo()
    // this.getNotification()
    // balanceI = setInterval(this.getInfo, 3000)
    // notificationI = setInterval(this.getNotification, 5000)

    wx.onSocketMessage(function(res) {
      console.log('index=>wsresponse', res)
      //接收消息回调
      var data = JSON.parse(res.data.replace(String.fromCharCode(0x1e), '')) //返回时去掉分隔符
      if (!!data.target) {
        switch (data.target) {
          case 'ReceiveMessage':
            self.msg = data.arguments[0] + '|' + data.arguments[1]
            break
          default:
            break
        }
        self.$apply()
      }
    })
  }
  onHide() {
    console.log('onhide')
    clearInterval(balanceI)
    clearInterval(notificationI)
  }
  onUnload() {
    console.log('onUnload')
    clearInterval(balanceI)
    clearInterval(notificationI)
  }
  sendBulletMessage(txt) {
    let url = 'https://ellist.cn/bulletmessage/api/bullet'
    let dataBullet = {
      nickName: this.$parent.globalData.userInfo.nickName,
      Id: this.$parent.globalData.userInfo.avatarUrl,
      Message: txt
    }
    wepy.request({
      url: url,
      method: 'POST',
      data: dataBullet,
      success: function(resp) {
        console.log('message send', resp)
        wepy.showToast({
          title: 'Message sent',
          icon: 'none',
          duration: 2000
        })
      },
      fail: function(err) {
        console.error(err)
      }
    })

    // //3rd party api
    // //--------------------------------------------------
    // let dataBullet2 = {
    //   nickname: this.$parent.globalData.userInfo.nickName,
    //   headimgurl: this.$parent.globalData.userInfo.avatarUrl,
    //   content: txt
    // }
    // wepy.request({
    //   url:
    //     'https://open.haodanmu.com/api/v1/danmu/send?access_token=07HllB4xu5ZnRxlaRCAGaFwoYcEaiqlvnaxlXzl4g4A',
    //   method: 'POST',
    //   data: dataBullet2,
    //   success: function(resp) {
    //     console.log('3rd party message send', resp)
    //   },
    //   fail: function(err) {
    //     console.error(err)
    //   }
    // })
  }
}
</script>
