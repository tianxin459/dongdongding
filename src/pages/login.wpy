<style lang="less">
.body {
  // background-color: var(--colorGreenGD);
}
.btnLogin {
  margin-left: auto;
  margin-right: auto;
  margin-top: 30%;

  .btn2 {
    display: flex;
    flex-direction: column;
    color: white;
    p {
      font-size: 40rpx;
      font-weight: 300;
    }
  }
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body">
      <wux-button class="btnLogin" block outline type="balanced" open-type="getUserInfo" bindgetuserinfo="onGotUserInfo">
        <view class="btn2">
          <wux-icon type="ios-beer" color="white" size="64" />
          <view>Authorize the App</view>
        </view>
      </wux-button>
      <!-- <button open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="onGotUserInfo">Go Party</button> -->
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import Header from '@/components/header'

export default class Login extends wepy.page {
  components = {
    header: Header
  }
  config = {
    usingComponents: {
      'wux-button': '../wux/button/index',
      'wux-icon': '../wux/icon/index',
      'wux-wing-blank': '../wux/wing-blank/index',
      'wux-white-space': '../wux/white-space/index'
      // 'wux-row': '../wux/row/index',
      // 'wux-col': '../wux/col/index'
    }
  }
  components = {}
  data = {
    userInfo: {},
    qrCodeUrl: '.',
    qrCodeData: 'no data',
    qrCodeColor: '#1ab16c',
    isIPX: false
  }
  methods = {
    goBack() {
      console.log('go back')
      // this.$redirect('./index');
    },
    onGotUserInfo(e) {
      console.log(e.detail.errMsg)
      console.log(e.detail.userInfo)
      console.log(e.detail.rawData)
      wepy.setStorageSync(this.globalData.CacheName_UserInfo, e.detail.userInfo)
      let self = this
      let url = `https://wtf.chinacloudsites.cn/api/WxUser/register`
      // let url = `https://wtf.chinacloudsites.cn/api/WxUser/register?nickname=${e.detail.userInfo.nickName}&avatarUrl=${e.detail.userInfo.avatarUrl}`;
      console.log(url)
      let loginData = e.detail.userInfo
      console.log(loginData)
      this.$redirect('./preload')
    }
  }

  onLoad(parm, data) {}
}
</script>
