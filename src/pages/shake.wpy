<style lang="less">
@import '../theme.less';
// @import '../buttons.less';
.body {
  color: white;
}

.title {
  width: 100%;
  font-weight: 200;
}

.input-container {
  width: 100%;
}

.ratio {
  border-bottom: 2px solid green;
}

.input {
  // border: 1px solid green;
  width: 100%;
  .input-label {
  }
  input {
    // border: 1px solid green;
    height: 4ex;
    border-bottom: 2px solid green;
  }
}

.btnStart {
  position: fixed;
  top: 100px;
  right: 25px;
  background-color: red;
  color: white;
}

@keyframes runnerHead {
  from {
    top: 12.5px;
  }
  80% {
    top: 16px;
  }
  to {
    top: 12.5px;
  }
}
.name {
  text-align: center;
  font-size: 30px;
  text-shadow: 0px 0px 5px white;
}
.avatar {
  width: 100%;
  height: 200px;
}

.runner {
  position: absolute;
  transition: all linear 0.1s;
  margin-left: -50px;
  left: 50%;
  .running-head {
    position: absolute;
    width: 100px;
    height: 100px;
    border: 1px solid green;
    box-shadow: 0 0 0 1px white;
    border-radius: 50%;
    animation-name: runnerHead;
    animation-duration: 1s;
    animation-iteration-count: infinite;
  }
  .running-body {
    position: absolute;
    top: 57.5px;
    // left: -10rpx;
    width: 100px;
    height: 100px;
  }
}

.block {
  flex: 1;
  width: 100%;
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
}

.display {
  font-size: 30px;

  .ranking {
    max-width: 100vw;
    color: orange;
    // text-shadow: 0 0 1px currentColor, -1px -1px 1px #030, 0 -1px 1px #030,
    //   1px -1px 1px #030, 1px 0 1px #030, 1px 1px 1px #030, 0 1px 1px #030,
    //   -1px 1px 1px #030, -1px 0 1px #030;
  }
}
.footer {
  flex-direction: row;
  margin-bottom: 30px;
  .button {
    padding: 0 10px;
  }
}
</style>
<template>
  <view class="container">
    <header></header>
    <view class="body">
      <view wx:if="{{false}}">
        <view>{{Lang.shake.Url}}</view>
        {{Lang.shake.Desc1}}
        <!-- <view>
          Msg:{{msg}}
        </view> -->
        <button class="button button-3d button-caution" @tap="onStart" wx:if="{{true||isAdmin}}">
          <text>{{Lang.shake.BtnStart}}</text>
        </button>
        <!-- <button class="button button-3d button-caution" @tap="testRun" wx:if="{{isAdmin}}">
          <text>test run</text>
        </button> -->
        <!-- <button class="btn-primary2 button-raised button-action button-circle" @tap="onShake" wx:if="{{showButton}}">
          <text>{{Lang.shake.BtnReady}}</text>
        </button> -->
      </view>
      <view class="avatar">
        <view class="name">{{UserInfo.englishName}}</view>
        <view class="runner">
          <image class="running-body" src='https://ellist.cn/wmtan/static/img/running1.gif'></image>
          <image class="running-head" src="{{UserInfo.avatarUrl}}"></image>
        </view>
      </view>
      <view class="display">
        <view class="ranking">
          {{ranking}}
        </view>
      </view>
      <view class="display block">
        <button class="button button-raised button-action button-circle" @tap="onShake" wx:if="{{showButton}}">
          <text>{{Lang.shake.BtnReady}}</text>
        </button>

        <button class="button button-raised button-action button-circle" @tap="onShake" wx:if="{{!showButton}}">
          <text>Refresh</text>
        </button>
      </view>

      <view class="footer" wx:if="{{isDebug||isAdmin}}">
        <button class="button button-raised button-primary" data-url='./admin' @tap='nav'>
          <text>Admin</text>
        </button>

        <button class="button button-raised button-primary" data-url='./shakeTest' @tap='nav'>
          <text>Test</text>
        </button>
        <button class="button button-raised button-primary" data-url='./eventsRemote' @tap='nav'>
          <text>Remote</text>
        </button>


        <button class="button button-raised button-caution" @tap="onStart">
          <text>{{Lang.shake.BtnStart}}</text>
        </button>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import Header from '@/components/header'; // alias example
import TextMixin from '@/mixins/text';
// import { $wuxBackdrop } from '../wux/index'
export default class Shake extends wepy.page {
  components = {
    header: Header
  };
  mixins = [TextMixin];
  config = {
    usingComponents: {}
  };
  computed = {
    UserInfo() {
      return this.$parent.globalData.userInfo;
    },
    isAdmin() {
      return this.$parent.isAdmin();
    },
    isDebug(){
      return this.$parent.isDebug();
    }
  };
  components = {};
  data = {
    lastCheckTime: 0,
    threshold: 2,
    checkTimeThreshold: 500,
    requestTimeBreak: 1000,
    hits: [],
    shakeHistory: [],
    amp: 1,
    sx: 0,
    sy: 0,
    sz: 0,
    msg: '',
    range: 1,
    showButton: true,
    ranking: 'Click to ready',
    shakeActive: true,
    shakeSteps: 0
  };
  methods = {
    testRun(e) {
      this.sendRun(50);
      console.log('send test run 50');
    },
    nav(e) {
      // console.log(e.target.dataset)
      this.$navigate(e.target.dataset.url);
    },
    onStart(e) {
      let url = 'https://ellist.cn/wmtan/api/race/begin';
      let dataRun = {
        Message: 'GoGoGo'
      };
      wepy.request({
        url: url,
        method: 'POST',
        data: dataRun,
        success: function(resp) {
          console.log('start Run send', resp);
        },
        fail: function(err) {
          console.error(err);
        }
      });
    },
    onEmailChange(e) {
      this.email = e.detail.value;
    },
    onEnglishNameChange(e) {
      this.englishName = e.detail.value;
    },
    onNumPeopleChange(e) {
      this.numPeople = e.detail.value;
      console.log(e.detail.value);
    },
    submit() {
      console.log('start shake');
      // this.shakeFun();
      // this.sendRun();
    },
    onShake() {
      let self = this;
      self.showButton = false;
      self.ranking = self.Lang.shake.WaitSignal; //'Wait for Start Signal...';
      this.shakeFun();
      this.sendRun();
      this.sendRun(10);
      self.$apply();
    }
  };
  onAccelerometerChange(res) {
    let self = this;

    self.sx = res.x;
    self.sy = res.y;
    self.sz = res.z;
    var x = res.x.toFixed(4);
    var y = res.y.toFixed(4);
    var z = res.z.toFixed(4);
    if (
      res.x > self.threshold ||
      res.y > self.threshold ||
      res.z > self.threshold
    ) {
      self.shakeHistory.push({ x, y, z });
    }
    let nowCheckTime = Date.now();
    if (nowCheckTime - self.lastCheckTime < self.checkTimeThreshold) return;
    self.lastCheckTime = nowCheckTime;
    if (self.shakeHistory.length < 1) return;

    let maxx = Math.max(...self.shakeHistory.map(i => Math.abs(i.x)));
    let maxy = Math.max(...self.shakeHistory.map(i => Math.abs(i.y)));
    let maxz = Math.max(...self.shakeHistory.map(i => Math.abs(i.z)));
    let run = Math.ceil(maxx + maxy + maxz);
    let count = self.shakeHistory.length;
    self.shakeHistory.length = 0;
    let hit = { x: maxx, y: maxy, z: maxz, run: run, count };
    self.hits.push(hit);
    let runDis = hit.run * self.amp + count;

    if (self.shakeActive) {
      self.sendRun(runDis);
      self.msg = runDis;
      self.ranking = 'run for ' + runDis;
    }
    self.$apply();
  }
  shakeFun() {
    // shake
    var self = this;
    // var positivenum = 0;
    wx.startAccelerometer({
      interval: 'ui'
    });
    // self.ranking = 'Wait for Start Signal...';
    // wx.onAccelerometerChange(onAccelerometerChange);
    self.$apply();
  }

  sendRun(step) {
    let url = 'https://ellist.cn/wmtan/api/race/run';
    let self = this;
    let dataRun = {
      userId: this.$parent.globalData.userInfo.openid,
      englishName: this.$parent.globalData.user.englishName,
      avatorUrl: this.$parent.globalData.userInfo.avatarUrl,
      gender: this.$parent.globalData.userInfo.gender,
      message: step
    };
    console.log('dataRun', dataRun);
    wepy.request({
      url: url,
      method: 'POST',
      data: dataRun,
      success: function(resp) {
        self.msg = 'run ' + step;
        console.log('dataRun send', resp);
      },
      fail: function(err) {
        console.error(err);
      }
    });
  }
  onUnload() {
    wx.stopAccelerometer();
  }
  onLoad(parm, data) {
    let self = this;
    self.showButton = true;
    // this.shakeActive = true
  }
  onHide() {
    let self = this;
    self.showButton = true;
    self.ranking = '';
    // self.$apply();
  }
  onShow() {
    let self = this;
    self.ranking = self.Lang.shake.ClickReady;
    this.$parent.getConfig(false, config => {
      self.config = config;
    });
    // this.shakeFun();
    // console.log('start shakefun');
    // this.sendRun();
  }
  onSocketMessage(res) {
    let self = this;
    console.log('shake=>wsresponse', res);
    // 接收消息回调
    var data = JSON.parse(res.data.replace(String.fromCharCode(0x1e), '')); // 返回时去掉分隔符
    if (data.target) {
      switch (data.target) {
        case 'ReceiveMessage':
          self.msg = data.arguments[0] + '|' + data.arguments[1];
          self.ReceiveMessage(data.arguments[0], data.arguments[1]);
          break;
        default:
          break;
      }
      self.$apply();
    }
  }
  ReceiveMessage(uid, message) {
    let self = this;
    if (!message) return;
    if (message.indexOf('finish at') > -1) {
      self.shakeActive = false;
      wepy.vibrateLong();
      self.ranking = 'Competition ranking:' + message.replace('finish at', '');
      wx.stopAccelerometer();
    }
    if (message.indexOf('GoGoGo') > -1) {
      self.shakeActive = true;
      wepy.vibrateLong();
      self.ranking = 'Go! Shake~Shake';
    }
  }
}
</script>
